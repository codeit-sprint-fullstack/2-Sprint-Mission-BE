// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  firstName String
  lastName  String
  address   String?
  nickname  String   @unique
  image     String?  @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products        Product[]
  articles        Article[]
  articleComments ArticleComment[]
  productComments ProductComment[]
}

model Product {
  id            String   @id @default(uuid())
  name          String
  description   String
  price         Int
  stock         Int
  tags          String[]
  images        String[]
  favoriteCount Int      @default(0) //min 0
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user            User             @relation(fields: [userId], references: [id])
  userId          String
  productComments ProductComment[]
}

model Article {
  id        String   @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user            User             @relation(fields: [userId], references: [id])
  userId          String
  articleComments ArticleComment[]
}

model ArticleComment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User    @relation(fields: [userId], references: [id])
  userId    String
  article   Article @relation(fields: [articleId], references: [id])
  articleId String
}

model ProductComment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User    @relation(fields: [userId], references: [id])
  userId    String
  product   Product @relation(fields: [productId], references: [id])
  productId String
}
